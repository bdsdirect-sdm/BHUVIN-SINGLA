import { Model, DataTypes } from "sequelize";
import sequelize from "../config/db";
import { v4 as UUID } from 'uuid';

class Admin extends Model {
    public uuid!: string;
    public firstname!: string;
    public lastname!: string;
    public email!: string;
    public status!: boolean;
    public isDeleted!: boolean;
    public deletedAt!: Date;
}

Admin.init({
    uuid: {
        type: DataTypes.UUID,
        defaultValue: UUID,
        primaryKey: true,
        allowNull: false
    },
    firstname: {
        type: DataTypes.STRING,
        allowNull: false
    },
    lastname: {
        type: DataTypes.STRING,
        allowNull: false
    },
    email: {
        type: DataTypes.STRING,
        allowNull: false
    },
    status: {
        type: DataTypes.BOOLEAN,
        defaultValue: true,
    },
    isDeleted: {
        type: DataTypes.BOOLEAN,
        defaultValue: false,
    },
    deletedAt: {
        type: DataTypes.DATE,
        allowNull: true,
    }
}, {
    modelName: 'Admin',
    sequelize
})

export default Admin;

i need an api to ao that register details can be saved at backend 

just like this api

export const Register = async (req: any, res: any) => {
    try {
        const { firstname, lastname, email, password, phone } = req.body.formData;
        const { data } = req.body;
        console.log("data--->", data);

        const isExist = await User.findOne({ where: { email: email } });
        if (isExist) {
            return res.status(400).json({ 'message': 'User already exist' });
        }
        const hashedPassword = await bcrypt.hash(password, 10);
        const user = await User.create({
            firstname,
            lastname,
            email,
            password: hashedPassword,
            phone
        });

        if (data) {
            const invite: any = jwt.verify(data, SECRET_KEY, (err: any, info: any) => {
                if (err) {
                    return 0;
                }
                return info;
            });

            if (invite) {
                const friendinfo = invite.split('_');
                console.log("friendinfo----->", friendinfo);
                const friend = await Friend.create({
                    user_1_Id: user.uuid,
                    user_2_Id: friendinfo[3]
                })
                console.log("friend----->", friend);
                if (friend) {
                    const request = await Request.findOne({ where: { url: data } });
                    console.log("huhu===>", request)
                    if (request) {
                        await request.update({
                            request_status: 1,
                            email: email,
                            sent_to_mail: email
                        })
                    }
                }
            }
        }

        return res.status(200).json({ 'message': 'User created successfully' });
    }
    catch (err) {
        return res.status(500).json({ 'message': 'Something went wrong, Please try after sometime' })
    }
}